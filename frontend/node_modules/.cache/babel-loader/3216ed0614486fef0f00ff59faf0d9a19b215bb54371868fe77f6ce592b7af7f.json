{"ast":null,"code":"const API_BASE_URL = 'http://localhost:5000/api';\nclass ApiService {\n  constructor() {\n    this.token = localStorage.getItem('edu_arena_token');\n  }\n  getHeaders() {\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    if (this.token) {\n      headers['Authorization'] = `Bearer ${this.token}`;\n    }\n    return headers;\n  }\n  async request(endpoint, options = {}) {\n    const url = `${API_BASE_URL}${endpoint}`;\n    const config = {\n      headers: this.getHeaders(),\n      ...options\n    };\n    try {\n      const response = await fetch(url, config);\n      if (!response.ok) {\n        throw new Error(`API error: ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('API request failed:', error);\n      throw error;\n    }\n  }\n\n  // Auth methods\n  async register(userData) {\n    return this.request('/auth/register', {\n      method: 'POST',\n      body: JSON.stringify(userData)\n    });\n  }\n  async login(credentials) {\n    return this.request('/auth/login', {\n      method: 'POST',\n      body: JSON.stringify(credentials)\n    });\n  }\n\n  // Course methods\n  async getCourses() {\n    return this.request('/courses');\n  }\n  async getCourse(id) {\n    return this.request(`/courses/${id}`);\n  }\n  async createCourse(courseData) {\n    return this.request('/courses', {\n      method: 'POST',\n      body: JSON.stringify(courseData),\n      headers: {\n        ...this.getHeaders(),\n        'x-api-key': 'edu_arena_admin_2024'\n      }\n    });\n  }\n  async updateCourse(id, courseData) {\n    return this.request(`/courses/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(courseData),\n      headers: {\n        ...this.getHeaders(),\n        'x-api-key': 'edu_arena_admin_2024'\n      }\n    });\n  }\n  async addReview(courseId, reviewData) {\n    return this.request(`/courses/${courseId}/reviews`, {\n      method: 'POST',\n      body: JSON.stringify(reviewData)\n    });\n  }\n}\nexport const apiService = new ApiService();","map":{"version":3,"names":["API_BASE_URL","ApiService","constructor","token","localStorage","getItem","getHeaders","headers","request","endpoint","options","url","config","response","fetch","ok","Error","status","json","error","console","register","userData","method","body","JSON","stringify","login","credentials","getCourses","getCourse","id","createCourse","courseData","updateCourse","addReview","courseId","reviewData","apiService"],"sources":["C:/Users/Laptops Garage W11/Desktop/edu-arena/frontend/src/services/api.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:5000/api';\r\n\r\nclass ApiService {\r\n  constructor() {\r\n    this.token = localStorage.getItem('edu_arena_token');\r\n  }\r\n\r\n  getHeaders() {\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n    };\r\n    \r\n    if (this.token) {\r\n      headers['Authorization'] = `Bearer ${this.token}`;\r\n    }\r\n    \r\n    return headers;\r\n  }\r\n\r\n  async request(endpoint, options = {}) {\r\n    const url = `${API_BASE_URL}${endpoint}`;\r\n    const config = {\r\n      headers: this.getHeaders(),\r\n      ...options,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, config);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`API error: ${response.status}`);\r\n      }\r\n      \r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('API request failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Auth methods\r\n  async register(userData) {\r\n    return this.request('/auth/register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(userData),\r\n    });\r\n  }\r\n\r\n  async login(credentials) {\r\n    return this.request('/auth/login', {\r\n      method: 'POST',\r\n      body: JSON.stringify(credentials),\r\n    });\r\n  }\r\n\r\n  // Course methods\r\n  async getCourses() {\r\n    return this.request('/courses');\r\n  }\r\n\r\n  async getCourse(id) {\r\n    return this.request(`/courses/${id}`);\r\n  }\r\n\r\n  async createCourse(courseData) {\r\n    return this.request('/courses', {\r\n      method: 'POST',\r\n      body: JSON.stringify(courseData),\r\n      headers: {\r\n        ...this.getHeaders(),\r\n        'x-api-key': 'edu_arena_admin_2024'\r\n      }\r\n    });\r\n  }\r\n\r\n  async updateCourse(id, courseData) {\r\n    return this.request(`/courses/${id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(courseData),\r\n      headers: {\r\n        ...this.getHeaders(),\r\n        'x-api-key': 'edu_arena_admin_2024'\r\n      }\r\n    });\r\n  }\r\n\r\n  async addReview(courseId, reviewData) {\r\n    return this.request(`/courses/${courseId}/reviews`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(reviewData),\r\n    });\r\n  }\r\n}\r\n\r\nexport const apiService = new ApiService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}